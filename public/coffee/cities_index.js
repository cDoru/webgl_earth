// Generated by CoffeeScript 1.7.1
(function() {
  var google_initialize;

  this.app = angular.module("myApp", ["ui.bootstrap"]).config(function($routeProvider) {
    $routeProvider.when("/cities", {
      templateUrl: "/manager/cities-list.html",
      controller: cities_controller
    }).when("/cities/new", {
      templateUrl: "/manager/city-detail.html",
      controller: cities_create_controller
    }).when("/cities/:cityid", {
      templateUrl: "/manager/city-detail.html",
      controller: cities_edit_controller
    }).otherwise({
      redirectTo: "/cities"
    });
    return true;
  });

  this.app.filter("startFrom", function() {
    return function(input, start) {
      if (input) {
        start = +start;
        return input.slice(start);
      }
      return [];
    };
  });

  this.stripSlashes = function(string) {
    return string.replace(/\\(.)/mg, "$1");
  };

  google_initialize = function($scope) {
    var coordinates, map, mapOptions, marker, myLatlng;
    if ($scope.city.coordinates != null) {
      coordinates = $scope.city.coordinates;
    } else {
      coordinates = [-34.397, 150.644];
    }
    mapOptions = {
      center: new google.maps.LatLng(coordinates[0], coordinates[1]),
      zoom: 8,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    myLatlng = new google.maps.LatLng(coordinates[0], coordinates[1]);
    marker = new google.maps.Marker({
      position: myLatlng,
      map: map,
      draggable: true
    });
    return google.maps.event.addListener(marker, "dragend", function() {
      $scope.city.coordinates = [marker.position.lat(), marker.position.lng()];
      return $scope.$digest();
    });
  };

  this.cities_create_controller = function($scope, $http, $routeParams, $location) {
    $scope.city = {};
    $scope.save_data = function() {
      return $http.post("/manager/cities/", $scope.city).success(function() {
        return $location.path("/cities");
      });
    };
    $scope.to_list = function() {
      return $location.path("/cities");
    };
    $scope.wiki_modal = function($event) {
      $http.jsonp("http://api.wikilocation.org/articles?lng=" + $scope.city.coordinates[1] + "&lat=" + $scope.city.coordinates[0] + "&limit=10&radius=50000&jsonp=JSON_CALLBACK").success(function(data) {
        $scope.wiki_response = data.articles;
        return $('#wiki_modal').modal('show');
      });
      return $event.preventDefault();
    };
    $scope.google_modal = function($event) {
      $http.get("/gmaps/?language=en&location=" + ($scope.city.coordinates.join(','))).success(function(data) {
        $scope.google_response = data;
        return $('#google_modal').modal('show');
      });
      return $event.preventDefault();
    };
    $scope.flickr_modal = function($event) {
      $event.preventDefault();
      return $http.jsonp("http://api.flickr.com/services/rest/?method=flickr.places.findByLatLon&format=json&accuracy=11&lat=" + $scope.city.coordinates[0] + "&lon=" + $scope.city.coordinates[1] + "&api_key=903614f7ec5aabd30fda3813428ff755&jsoncallback=JSON_CALLBACK").success(function(data) {
        $scope.flickr_response = data.places.place;
        return $('#flickr_modal').modal('show');
      });
    };
    $scope.apply_flickr = function() {
      return $scope.city.flickr = $scope.flickr_response[0];
    };
    $scope.apply_wikipedia = function() {
      return $scope.city.wikipedia_array = JSON.parse($scope.wiki_response.selected);
    };
    $scope.apply_google = function() {
      $scope.city.places = {};
      $scope.city.places.marks = $scope.google_response.results;
      return $scope.city.places.legal = $scope.google_response.html_attributions;
    };
    return setTimeout(function() {
      return google_initialize($scope);
    }, 10);
  };

  this.cities_edit_controller = function($scope, $http, $routeParams, $location, $filter) {
    $http.get("/cities/" + $routeParams.cityid).success(function(data) {
      $scope.city = data[0];
      console.log($scope.city);
      return google_initialize($scope);
    });
    $scope.city = {};
    $scope.save_data = function() {
      return $http.post("/manager/cities/" + $scope.city._id, $scope.city).success(function() {
        return $location.path("/cities");
      });
    };
    $scope.to_list = function() {
      return $location.path("/cities");
    };
    $scope.wiki_modal = function($event) {
      $http.jsonp("http://api.wikilocation.org/articles?lng=" + $scope.city.coordinates[1] + "&lat=" + $scope.city.coordinates[0] + "&limit=10&radius=50000&jsonp=JSON_CALLBACK").success(function(data) {
        $scope.wiki_response = data.articles;
        return $('#wiki_modal').modal('show');
      });
      return $event.preventDefault();
    };
    $scope.google_modal = function($event) {
      $http.get("/gmaps/?language=en&location=" + ($scope.city.coordinates.join(','))).success(function(data) {
        $scope.google_response = data;
        return $('#google_modal').modal('show');
      });
      return $event.preventDefault();
    };
    $scope.flickr_modal = function($event) {
      $event.preventDefault();
      return $http.jsonp("http://api.flickr.com/services/rest/?method=flickr.places.findByLatLon&format=json&accuracy=11&lat=" + $scope.city.coordinates[0] + "&lon=" + $scope.city.coordinates[1] + "&api_key=903614f7ec5aabd30fda3813428ff755&jsoncallback=JSON_CALLBACK").success(function(data) {
        $scope.flickr_response = data.places.place;
        return $('#flickr_modal').modal('show');
      });
    };
    $scope.apply_flickr = function() {
      return $scope.city.flickr = $scope.flickr_response[0];
    };
    $scope.apply_wikipedia = function() {
      return $scope.city.wikipedia_array = JSON.parse($scope.wiki_response.selected);
    };
    return $scope.apply_google = function() {
      $scope.city.places = {};
      $scope.city.places.marks = $scope.google_response.results;
      return $scope.city.places.legal = $scope.google_response.html_attributions;
    };
  };

  this.cities_controller = function($scope, $http, $filter, $location) {
    $scope.currentPage = 1;
    $scope.maxSize = 11;
    $scope.entryLimit = 10;
    $scope.setPage = function(pageNo) {
      return $scope.currentPage = pageNo;
    };
    $scope.cities = [];
    $scope.search = '';
    $http.get('/cities/?manager=true').success(function(data) {
      $scope.cities = data;
      return $scope.noOfPages = Math.ceil($scope.cities.length / $scope.entryLimit);
    });
    $scope.filter = function() {
      $scope.filtered = $filter("filter")($scope.cities, $scope.search).length;
      return $scope.noOfPages = Math.ceil($scope.filtered / $scope.entryLimit);
    };
    return $scope.delete_city = function($event) {
      var id;
      id = $event.target.hash.split('#')[1];
      if (confirm("Are you sure? Thic action can't be undone! Delete this city?") === true) {
        $http["delete"]("/manager/cities/" + id).success(function(data) {
          return $location.path("/cities");
        });
      } else {
        console.log('cancel');
      }
      return $event.preventDefault();
    };
  };

}).call(this);
