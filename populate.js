// Generated by CoffeeScript 1.7.1

/*
Module dependencies.
 */

(function() {
  var City, Country, cities_raw, city, citySchema, conn, countries_raw, countrySchema, mongoose, save_city, save_city_wrap, _i, _len;

  mongoose = require('mongoose');

  cities_raw = require('./public/json/ru.json');

  countries_raw = require('./public/json/formed_regions.json');

  citySchema = new mongoose.Schema({
    code: String,
    country_code: String,
    city_name: {
      en: String,
      ru: String
    },
    coordinates: [Number],
    place_id: String,
    places: mongoose.Schema.Types.Mixed,
    flickr: mongoose.Schema.Types.Mixed,
    wikipedia_array: mongoose.Schema.Types.Mixed,
    wikipedia_array_ru: mongoose.Schema.Types.Mixed
  });

  countrySchema = new mongoose.Schema({
    code: String,
    name: mongoose.Schema.Types.Mixed,
    un_name: String,
    region: String,
    sub_region: String
  });

  City = mongoose.model('City', citySchema);

  Country = mongoose.model('Country', countrySchema);

  conn = mongoose.connect('mongodb://localhost/webgl_earth');

  for (_i = 0, _len = cities_raw.length; _i < _len; _i++) {
    city = cities_raw[_i];
    delete city._id;
    delete city.__v;
    delete city.place_id;
    delete city.place_id;
    if (city.wikipedia_array_ru) {
      delete city.wikipedia_array_ru.type;
      delete city.wikipedia_array_ru.mobileurl;
      delete city.wikipedia_array_ru.lat;
      delete city.wikipedia_array_ru.lng;
    }
    delete city.wikipedia_array.type;
    delete city.wikipedia_array.mobileurl;
    delete city.wikipedia_array.lat;
    delete city.wikipedia_array.lng;
    delete city.flickr.latitude;
    delete city.flickr.longitude;
    delete city.flickr.place_type;
    delete city.flickr.place_type_id;
    delete city.flickr.timezone;
    delete city.places;
  }

  console.log(cities_raw.length);

  City.remove({});

  save_city_wrap = function(index) {
    if (index == null) {
      index = 0;
    }
    if (index < cities_raw.length) {
      city = cities_raw[index];
      return save_city(city, index);
    } else {
      return console.log('done!');
    }
  };

  save_city = function(city, index) {
    console.log(index);
    return new City(city).save(function(err, doc) {
      if (err) {
        console.log(err);
      }
      return save_city_wrap(index + 1);
    });
  };

  save_city_wrap();

}).call(this);
